/*
https://programmers.co.kr/learn/courses/30/lessons/59042
없어진 기록 찾기
*/

SELECT ANIMAL_ID, NAME
FROM ANIMAL_OUTS
WHERE ANIMAL_ID NOT IN (SELECT ANIMAL_ID FROM ANIMAL_INS);

/*
https://programmers.co.kr/learn/courses/30/lessons/59043
있었는데요 없었습니다: 보호 시작일보다 입양일이 더 빠른 동물의 아이디와 이름을 조회
*/

SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
JOIN ANIMAL_OUTS
ON ANIMAL_INS.ANIMAL_ID = ANIMAL_OUTS.ANIMAL_ID
WHERE ANIMAL_INS.DATETIME > ANIMAL_OUTS.DATETIME
ORDER BY ANIMAL_INS.DATETIME;

/*
https://programmers.co.kr/learn/courses/30/lessons/59044
오랜 기간 보호한 동물 (1)
*/

SELECT NAME, DATETIME
FROM ANIMAL_INS
WHERE ANIMAL_INS.ANIMAL_ID NOT IN (SELECT ANIMAL_ID FROM ANIMAL_OUTS)
ORDER BY ANIMAL_INS.DATETIME
LIMIT 3;

/*
https://programmers.co.kr/learn/courses/30/lessons/59045
보호소에서 중성화한 동물 구하기
*/

SELECT ANIMAL_INS.ANIMAL_ID, ANIMAL_INS.ANIMAL_TYPE, ANIMAL_INS.NAME
FROM ANIMAL_INS
JOIN ANIMAL_OUTS
ON ANIMAL_INS.ANIMAL_ID = ANIMAL_OUTS.ANIMAL_ID
WHERE ANIMAL_INS.SEX_UPON_INTAKE <> ANIMAL_OUTS.SEX_UPON_OUTCOME
ORDER BY ANIMAL_INS.ANIMAL_ID;

/*
그룹별 조건에 맞는 식당 목록 출력하기
*/

SELECT A.MEMBER_NAME,B.REVIEW_TEXT,DATE_FORMAT(B.REVIEW_DATE, "%Y-%m-%d") AS REVIEW_DATE
from MEMBER_PROFILE A join REST_REVIEW B
on A.MEMBER_ID = B.MEMBER_ID
WHERE A.MEMBER_ID = (SELECT MEMBER_ID FROM REST_REVIEW
GROUP BY MEMBER_ID
ORDER BY COUNT(*) DESC LIMIT 1)
order by REVIEW_DATE asc, REVIEW_TEXT
